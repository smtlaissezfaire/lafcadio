CHANGELOG

0.5.1 -- October 5 2004
* WARNING: Moved class files into submodule files. This will only affect you if for some reason you included files like "lafcadio/domain/DomainObject" directly instead of just including "lafcadio"
* BooleanField#toSql handles '1'/'0' enum properly
* fixed bug with Query with a limit
* fixed bug where ObjectStore#getMax( domain_class ) failed with a domain class with a non-standard pk
* fixed bug where SqlValueConverter wasn't converting over a field if it had a non-default dbFieldName
* fixed bug with lafcadio_schema output
* you can now set "checkFields" in your LafcadioConfig to "onAllStates", "onCommit", or "onInstantiate" to verify field values
* Update gem to include installing lafcadio_schema as an executable
* DomainObject#to_s is now a valid method
* ContextualService can handle a child that's an inner class, like ObjectStore::DbConnection
* When you run a query keyed on a domain object not committed, it raises an error
* You can use comparison to query against a link, whether or not such an index actually dereferences to a row in the other table
* ObjectStore#commit returns the object that was just committed
* Removed MockObjectStore#addObject and MockDbBridge#addObject

0.5.0 -- September 5 2004
* ObjectStore raises an informative error if a domain class' primary key is defined incorrectly
* instead of using an external config file, you can set LafcadioConfig's values using LafcadioConfig.setValues
* convenience methods for defining domain class methods in Ruby
* fixed bug on ObjectStore#getClients( 1, 'client_id' ) for domain classes with non-standard primary keys
* one-line methods for overriding DomainObject.tableName and DomainObject.sqlPrimaryKeyName
* lots of code cleanup
* WARNING: Removed DecimalField#precision; ObjectField#defaultFieldName, #hideLabel, #writeOnce, #hideDisplay, #default, #notUniqueMsg; LinkField#listener, #newDuringEdit, #sortField; PasswordField#maxLength, #autoGenerate; TextField#large, #size; HashOfArrays

0.4.0 -- June 26 2004
* WARNING: Domain object primary key is now named "pkId", not "objId"
* Added ObjectStore#getMax( domain_class, field_name )
* Added ability to compare one field to another in Query::Equals
* Added ObjectStore#get< domain_class >, which is the same as ObjectStore#getAll( domain_class )
* ObjectStore can handle an ODBC connection string
* Added LinkField#deleteCascade
* When DomainObject is instantiated, it does a lazy evaluation of field values to save time when you load a table with many fields but you only care about a few
* ObjectStore#getSubset uses Cache so query requests can be cached

0.3.6 -- May 20 2004
* WARNING: util/Logger replaced with the logger in log4r
* TextField#valueForSQL handles three apostrophes at the start of a line. (Thanks to Mike Stok for the solution via comp.lang.ruby.)
* When you're doing the insert for an inherited Domain Object, it inserts the parent table first, and child table second. (Thanks to Kaspar Schiess for this patch.)
* Query conditions can handle fields with dbFieldName set to something besides the field's name.
* Fixed hashing behavior of DomainObject and DomainObjectProxy.
* Added BlobField. (Thanks to Kaspar Schiess for this patch.)
* Domain classes with fields defined in XML can define dbFieldName as a field's attribute.
* Added ObjectStore#getDbBridge.
* ObjectStore dispatches queries correctly, so you can run inferred queries.
* ObjectStore was seriously refactored; this shouldn't affect how it looks externally.

0.3.5 -- March 31 2004
* WARNING: Removed a lot of inessential files having to do with HTML, CGI, and XML
* WARNING: Moved ClassUtil methods into Class, DomainUtil methods into DomainObject, StrUtil methods into String and Numeric. Renamed EnglishUtil to English.
* WARNING: Everything is now in a Lafcadio module
* TextField#valueForSQL handles an apostrophe after a newline
* All the library code is now in the /lib/ directory, instead of the /lafcadio/ directory
* You can use the whole library by simply including "lafcadio"
* The Rubygem works now, too!
* Added basic query inference to ObjectStore
* Fixed a bug where DateTimeField#valueFromSQL needed to handle DBI::Timestamp instead of String because of the move to DBI in 0.3.3
* Fixed Query::Not#objectType
* Fixed a method dispatching bug in ObjectStore#method_missing
* install.rb installs and deinstalls binaries in /usr/local/bin
* Fixed ObjectCollector#getMapped
* BooleanField#valueFromSQL handles either Fixnum or String for a MySQL tinyint, since DBI seems to be indecisive about which it prefers

0.3.4 -- December 31 2003
* Fixed a bug in TextField#valueForSQL where committing a string value with backslashes before a newline caused a problem with apostrophe escaping
* Fixed a bug where DateField#valueFromSQL needed to handle DBI::Date instead of String because of the move to DBI in 0.3.3
* Condition#getField raises a useful exception if you enter an invalid fieldName
* ClassUtil.getClass raises MissingError if it can't find the class
* Domain classes don't need to live in their own files
* responsibility for manipulating ClassDefinitionXmlParser moved from DomainObject to ObjectType
* You can set a different tableName and sqlPrimaryKeyName in the class definition XML
* added Query::Inferrer, but its interface will change soon so you probably shouldn't use it yet.
* Renamed DomainObject.getField to DomainObject.getClassField
* DomainObject.getField will look in itself and superclasses 
* fixed some tutorial examples

0.3.3 -- November 23 2003
* ClassDefinitionXmlParser#execute raises an informative error message if you forget to define a field's class.
* FieldManager captures the query string.
* MockDbBridge observes a limit set in a Query.
* TimeStampField works with ClassDefinitionXmlParser.
* Lafcadio now uses DBI instead of Ruby/MySQL -- this is the first step towards making Lafcadio compatible with other databases.
* lafcadio_schema correctly creates the field definition for a TimeStampField.

0.3.2 -- October 27 2003
* Fixed a bug in the includer (the class that allows for root-level includeable files to reduce requires) that made it only work if it was searching in the current directory.

0.3.1 -- October 26 2003
* DEPRECATION WARNING: There are now root-level includeable files that can save you from having to type too many includes. You can now include "lafcadio/objectField" to include all files in the objectField directory instead of "lafcadio/objectField/DateField", "lafcadio/objectField/TextField", etc. The individual files will disappear sometime around version 0.5.0.
* Instead of overwriting DomainObject.getClassFields to define fields for a domain class, you now have the option of writing an XML file instead. This method is now the encouraged method, but the old method of overwriting DomainObject.getClassFields will work for the foreseeable future.
* lafcadio_schema needs the config file as an argument flagged with -c.
* Added +, -, prev, next, startDate, and endDate to Month. Also, calling Month.new with no arguments returns the current month.
* SQL logging can be toggled by editing the config file. Insert the line "logSql:y" in the file to turn it on, and make sure to set your logdir value as well.
* Added QueueHash#==.
* Fixed a bug in MockSmtp.lastSubject.

0.3.0 -- October 15 2003
* moved install.rb from /bin to /. /bin is now for scripts that Lafcadio users will use after installation, such as lafcadio_schema.
* created lafcadio_schema script, which reads a DomainObject class definition and creates a create table statement.

0.2.2 -- November 23 2003
* DbBridge disconnects from MySql when it's destroyed.

0.2.1 -- October 6 2003
* Updated changelog.txt and the version number in lafcadio/lafcadio.rb.

0.2.0 -- September 25 2003
Initial production release.
* Removed .DS_Store files (these are Mac OS X files that got into the package by accident).
* FieldManager uses CGI#params[] instead of CGI#[].
* DomainObject caches class fields
* Fixed a bug with ObjectField.englishName.
* Fixed a bug where ObjectField#verify failed with a notNull field and a false value.
* Children of DomainObject can safely be compared to nil.
* Values in DomainObjects can be set through a DomainObjectProxy.
* Fixed a bug where Query::Equals#toSql failed with a boolean field and a false value.

0.1.3 -- August 11 2003
Initial beta release.
* Wrote lots of RDoc comments.
* Added DomainObject#commit.
* Renamed Config to LafcadioConfig.

0.1.2 -- August 6 2003
* Cleaned up code to work with Ruby 1.8.0. 
* The code's been optimized in a number of places.
* MockEmailer calls Email#verifySendable before pretending to send an email. 
* DateTimeField#valueFromSQL throws an informative error if it gets an unparseable string.
* Condition#toSql can deal with fields of superclasses

0.1.1 -- July 27 2003
* Extracted DomainUtil from ClassUtil.
* Extended sprintf-style support in DateFormatter.
* You can set a BooleanField's enums directly with BooleanField#enums
* Collector#getMapObject raises ArgumentError if either of its keys are nil
* ObjectStore flushes cache after new object commit
* Added HashOfArrays#[], HashOfArrays#[]=
* Added StrUtil.lineWrap

0.1.0 -- July 1 2003
Initial alpha release.











